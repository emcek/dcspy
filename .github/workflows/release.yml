name: Release Pipeline

on:
  push:
    tags: ["v*"]

jobs:
  style:
    uses: ./.github/workflows/style.yml

  test:
    needs: [style]
    uses: ./.github/workflows/test.yml

  build:
    needs: [test]
    runs-on: windows-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Set up Python environment"
        uses: ./.github/actions/setup-python

      - name: "Build dcspy"
        uses: ./.github/actions/build-app

      - name: "Upload dcspy binaries"
        uses: actions/upload-artifact@v3
        with:
          name: dcspy_binaries
          path: dist/

  github:
    needs: [build]
    runs-on: windows-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Set up Python environment"
        uses: ./.github/actions/setup-python

      - name: "Download dcspy binaries"
        uses: actions/download-artifact@v3
        with:
          name: dcspy_binaries

      - name: "Release Notes"
        id: version
        run: |
          $dcspy_ver = python latest_tag.py . 0
          Rename-Item -Path dcs_py.exe -NewName dcspy_$dcspy_ver.exe
          Rename-Item -Path dcs_py_cli.exe -NewName dcspy_cli_$dcspy_ver.exe
          Write-Output "number=$dcspy_ver" >> $env:GITHUB_OUTPUT
          $changelog = Get-Content .\CHANGELOG.md
          $last_change = ($changelog | Select-String -Pattern "^##\s" | Select-Object -Skip 1 -First 1).LineNumber - 3
          ($changelog | Select-Object -First $last_change -Skip 1) -join "`n" | Out-File .\RELEASENOTES.md

      - name: "Create Release"
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PYI_REL_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: dcspy ${{ steps.version.outputs.number }}
          body_path: RELEASENOTES.md
          draft: false
          prerelease: false
          files: |
            dcspy_${{ steps.version.outputs.number }}.exe
            dcspy_cli_${{ steps.version.outputs.number }}.exe
            dcspy-${{ steps.version.outputs.number }}-py3-none-any.whl
            dcspy-${{ steps.version.outputs.number }}.tar.gz

  pypi:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Set up Python environment"
        uses: ./.github/actions/setup-python

      - name: "Download dcspy binaries"
        uses: actions/download-artifact@v3
        with:
          name: dcspy_binaries

      - name: "Publish dcspy to PyPI"
        run: |
          mkdir dist
          mv *.whl *.tar.gz dist/
          ls -la dist/

#      - name: "Deploy to PyPI"
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_TOKEN }}
#          skip_existing: true
#          verbose: true
